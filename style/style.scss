:root {
  --blanc: #FFF;
  --shadow: #c5d6d6;
  --grey: #ebf7fc;
  --blue: #03a9f4;
  --red: #f44336;
}

$easeInOutQuint: cubic-bezier(0.86, 0, 0.07, 1);
$timing: 0.4s;

body {
  font-family: Arial, Helvetica, sans-serif;
  margin: 0;
  background-color: var(--blanc);
}

#logo,
svg {
  position: absolute;
  top: 10%;
  left: 20%;
  width: 30%;
  transform: translate(-50%, -50%);
  fill: white;
}

#logo {
  animation: fill 0.5s ease forwards 3.5s ;
}


#logo path:nth-child(1) {
  stroke-dasharray: 286;
  stroke-dashoffset: 286;
  animation: line-anim 2s ease forwards;
}

#logo path:nth-child(2) {
  stroke-dasharray: 224;
  stroke-dashoffset: 224;
  animation: line-anim 2s ease forwards .3s;
}

#logo path:nth-child(3) {
  stroke-dasharray: 212;
  stroke-dashoffset: 212;
  animation: line-anim 2s ease forwards .6s;
}

#logo path:nth-child(4) {
  stroke-dasharray: 231;
  stroke-dashoffset: 231;
  animation: line-anim 2s ease forwards .9s;
}

#logo path:nth-child(5) {
  stroke-dasharray: 293;
  stroke-dashoffset: 293;
  animation: line-anim 2s ease forwards 1.2s;
}

#logo path:nth-child(6) {
  stroke-dasharray: 231;
  stroke-dashoffset: 231;
  animation: line-anim 2s ease forwards 1.5s;
}

#logo path:nth-child(7) {
  stroke-dasharray: 208;
  stroke-dashoffset: 208;
  animation: line-anim 2s ease forwards 1.8s;
}


@keyframes line-anim {
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes fill {

  100% {
    fill: black;
    stroke: red;
  }
}

#games {
  position: absolute;
  top: 12%;
  left: 50%;
  transform: translate(40%, -50%);
  height: 100px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#games text {
  stroke: red;
  font-size: 80px;
  stroke-width: 3px;
  animation: textAnimate 5s infinite alternate;
}

@keyframes textAnimate {
  0% {
    stroke-dasharray: 0 50%;
    stroke-dashoffset: 20%;
  }

  100% {
    stroke-dasharray: 50% 0;
    stroke-dashoffset: -20%;
  }
}


#app-cover {
  display: flex;
  width: 100%;
}

.row {
  display: flex;
  width: 50%;
  margin: 0 auto;


  .button-cover {
    width: 10%;
    height: 100px;
    background-color: var(--blanc);
    box-shadow: 0 10px 20px -8px var(--shadow);
    border-radius: 20px;
    margin: 50px auto;
  }

  .timer {
    #chrono {
      width: 200px;
      height: 200px;
      border-radius: 100%;
      text-align: center;
      background: linear-gradient(180deg, rgba(176, 82, 255, 1) 0%, var(--red) 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--blanc);
      font-size: 24px;
    }

    #buttons {
      padding-top: 50px;
    }
  }
}

#buttons {
  display: none;
}

.button-cover,
.knobs,
.layer {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.button {
  position: relative;
  top: 50%;
  width: 74px;
  height: 36px;
  margin: -20px auto 0 auto;
  overflow: hidden;
}

.button.r,
.button.r .layer {
  border-radius: 100px;
}



.checkbox {
  position: relative;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  opacity: 0;
  cursor: pointer;
  z-index: 3;
}

.knobs {
  z-index: 2;
}

.layer {
  width: 100%;
  background-color: var(--grey);
  transition: 0.3s ease all;
  z-index: 1;
}

/* Button 3 */
#button-3 .knobs:before {
  content: "1";
  position: absolute;
  top: 4px;
  left: 4px;
  width: 20px;
  height: 10px;
  color: var(--blanc);
  font-size: 10px;
  font-weight: bold;
  text-align: center;
  line-height: 1;
  padding: 9px 4px;
  background-color: var(--blue);
  border-radius: 50%;
  transition: 0.3s ease all, left 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15);
}

#button-3 .checkbox:active+.knobs:before {
  width: 46px;
  border-radius: 100px;
}

#button-3 .checkbox:checked:active+.knobs:before {
  margin-left: -26px;
}

#button-3 .checkbox:checked+.knobs:before {
  content: "2";
  left: 42px;
  background-color: var(--red);
}

#button-3 .checkbox:checked~.layer {
  background-color: #fcebeb;
}

.regroupement {

  display: flex;
  flex-wrap: wrap;

  .generalboxone {
    margin-top: 100px auto;
    box-shadow: 5px 10px 20px -8px var(--shadow);
    background: linear-gradient(180deg, rgba(176, 82, 255, 1) 0%, var(--red) 100%);
    border-radius: 20px;
    width: 60%;
    margin: 200px auto 40px auto;
    text-align: center;
    padding: 40px;
    color: white;

    .user-box {
      position: relative;
      width: 50%;
      margin: 0 auto;

      input {
        width: 100%;
        padding: 10px 0;
        font-size: 16px;
        color: var(--blanc);
        margin-bottom: 30px;
        border: none;
        border-bottom: 1px solid var(--blanc);
        outline: none;
        background: transparent;
      }

      label {
        position: absolute;
        top: 0;
        left: 0;
        padding: 10px 0;
        font-size: 16px;
        color: var(--blanc);
        pointer-events: none;
        transition: .5s;
      }
    }

    .user-box input:focus~label,
    .user-box input:valid~label {
      top: -20px;
      left: 0;
      color: white;
      font-size: 12px;
    }

    .outline-button {
      appearance: none;
      background-color: transparent;
      border: none;
      box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.2) inset;
      color: var(--blanc);
      margin: auto;
      padding: 20px 40px;
      position: relative;
      cursor: pointer;
      font-size: 16px;

      &::before,
      &::after {
        content: "";
        position: absolute;
        height: 0;
        width: 2px;
        transition: height $timing $timing $easeInOutQuint, width $timing $easeInOutQuint;
      }

      &::before {
        box-shadow: 2px 2px 0 var(--blanc) inset;
        bottom: 0;
        left: 0;
      }

      &::after {
        box-shadow: -2px -2px 0 var(--blanc) inset;
        top: 0;
        right: 0;
      }

      &:hover {

        &::before,
        &::after {
          height: 100%;
          width: 100%;
          transition: height $timing $easeInOutQuint, width $timing $timing $easeInOutQuint;
        }
      }
    }

    #text {
      margin-top: 20px;
      line-height: 1.8;
      font-size: 18px;
      text-align: left;
    }

    #usertext {
      font-family: "Roboto", sans-serif;
      outline: 0;
      background: #f2f2f2;
      width: 100%;
      border: 0;
      margin: 0 0 15px;
      padding: 15px;
      box-sizing: border-box;
      font-size: 14px;
      border-radius: 10px;
      box-shadow: 0 10px 10px -10px var(--shadow);
    }
  }

  .leaderboard {
    margin-top: 100px auto;
    box-shadow: 5px 10px 20px -8px var(--shadow);
    background: linear-gradient(180deg, rgba(176, 82, 255, 1) 0%, var(--red) 100%);
    border-radius: 20px;
    width: 20%;
    margin: 200px auto;
    text-align: center;
    padding: 40px;
    color: white;

    ol {
      list-style-type: none;
      counter-reset: li;
      padding: 0;
    }

    li {
      font-size: 1rem;
    }

    li:before {
      counter-increment: li;
      content: counter(li, decimal-leading-zero);
      color: white;
      margin-right: 1em;
      line-height: 1.6;
    }

    li:nth-child(1)::before {
      color: #ffd700;
      margin-right: 1em;
    }

    li:nth-child(2)::before {
      color: #C0C0C0;
      margin-right: 1em;
    }

    li:nth-child(3)::before {
      color: #614e1a;
      margin-right: 1em;
    }
  }
}

.none {
  display: none;
}

.generalboxtwo {
  width: 60%;
  margin: 200px auto 40px auto;
  text-align: center;
  color: white;

  #game {
    background-color: black;
    margin: 0px auto;
  }

  #playagain {
    display: none;
    position: absolute;
    top: 40%;
    left: 45%;

    p {
      font-size: 24px;
      margin: 20px auto;
      text-align: center;
      color: white;
    }

    .outline-button-2 {
      appearance: none;
      background-color: transparent;
      border: none;
      box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.2) inset;
      color: var(--blanc);
      margin: auto;
      padding: 20px 40px;
      position: relative;
      cursor: pointer;
      font-size: 16px;

      &::before,
      &::after {
        content: "";
        position: absolute;
        height: 0;
        width: 2px;
        transition: height $timing $timing $easeInOutQuint, width $timing $easeInOutQuint;
      }

      &::before {
        box-shadow: 2px 2px 0 var(--blanc) inset;
        bottom: 0;
        left: 0;
      }

      &::after {
        box-shadow: -2px -2px 0 var(--blanc) inset;
        top: 0;
        right: 0;
      }

      &:hover {

        &::before,
        &::after {
          height: 100%;
          width: 100%;
          transition: height $timing $easeInOutQuint, width $timing $timing $easeInOutQuint;
        }
      }
    }
  }

  #scoresnake {
    color: white;
  }

}


.flex {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  width: 100%;

  a {
    width: 30%;
    box-shadow: 5px 10px 20px -8px black;
text-decoration: none;
color: white;

    .gamebox {
      h2 {
        text-align: center;
        padding: 10px 0;
        margin: 0;
      }
    }

    .reaction {
      background-color: #023e8a;
    }

    .memorisation {
      background-color: #c1121f;
    }
  }
  
}


// ________                              ________   
// /  _____/ _____     _____    ____      \_____  \  
// /   \  ___ \__  \   /     \ _/ __ \       _(__  <  
// \    \_\  \ / __ \_|  Y Y  \\  ___/      /       \ 
// \______  /(____  /|__|_|  / \___  >    /______  / 
//        \/      \/       \/      \/            \/  


body {
  font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
}

#container {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

#container #input {
  outline: none;
  border: 0.5px solid #000;
  padding: 10px 50px;
  font-size: 20px;
  letter-spacing: 3px;
  text-align: center;
}

#container #button {
  outline: none;
  border: 0.5px solid #000;
  background: transparent;
  padding: 15px 10px;
  vertical-align: top;
  cursor: pointer;
}

#ziffern {
  text-align: center;
  height: 50px;
  line-height: 50px;
}

p {
  display: inline;
  color: red;
}

strong {
  color: green;
}


#input_korrektur, #text_korrektur {
  font-size: 25px;
  text-align: center;
}